import Component from "./select.svelte"
import Input from "../input";
import {SvelteComponent} from "svelte";

export default class SelectInput extends Input {
	static component: typeof SvelteComponent = Component;
	props: { options: Array<{value:string,label:string}> } = {options: []}

	options(options: any): this {
		let opts:Array<{value:string,label:string}> = [];
		if (options instanceof Array) {
			options.forEach((opt:any) => {
				if (typeof opt === "string") opts.push({value: opt, label: opt});
				else if (typeof opt.label !== 'undefined' && typeof opt.value !== "undefined") {
					opts.push({value: opt.value, label: opt.label});
				} else {
					opts.push({value: Object.keys(opt)[0], label: opt[Object.keys(opt)[0]]});
				}
			})
		} else {
			let keys:Array<string> = Object.keys(options);
			keys.forEach((value:string) => opts.push({value: value, label: options[value]}));
		}
		this.props.options = opts;
		return this;
	}
}
























































































































































































































































































































































































































































































































































































































































